{"version":3,"sources":["amazon.png","sky.jpeg","header.js","footer.js","contact.js","form.js","card.js","class.js","newform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","changename","setState","name","changecour","cour","changeabout","abt","changeapp","app","state","className","onClick","this","React","Component","Footer","id","class","href","Contact","handlechangeall","event","target","value","handlesubmit","alert","JSON","stringify","preventDefault","fullname","email","phone","message","onSubmit","type","onChange","CardBodyWrapper","styled","CardImgWrapper","UppercaseName","ButtonWrapper","StrikeWrapper","H3Wrapper","Cord","Card","style","width","src","amazonimage","height","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6e05164e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amazon.9f0ef7c7.png\";","module.exports = __webpack_public_path__ + \"static/media/sky.e6125def.jpeg\";","import React from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nclass Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name : \"home\", cour : \"courses\", abt:\"About\", app: \"applynow\"};\r\n    }\r\n    changename=()=>{this.setState({name:\"HOME\"})}\r\n    changecour=()=>{this.setState({cour:\"COURSE\"})}\r\n    changeabout=()=>{this.setState({abt:\"ABOUT\"})}\r\n    changeapp=()=>{this.setState({app:\"APPLYNOW\"})}\r\n    render(){\r\n     \r\n        return(<div className=\"mainheader\">\r\n        <div><p onClick={this.changename} >{this.state.name}</p></div>\r\n        <div><p onClick={this.changecour} >{this.state.cour}</p></div>\r\n        <div><p onClick={this.changeabout} >{this.state.abt}</p></div>\r\n        <div><p onClick={this.changeapp}>{this.state.app}</p></div>\r\n    </div>)\r\n}\r\n}\r\nexport default Header","import React from \"react\";\r\nfunction Footer(){\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"mainfooter\">\r\n            <div id=\"logo\">DevikTech</div>\r\n            \r\n            <br/>\r\n        \r\n            <div>What Else to know</div>\r\n           <div>\r\n               <p><small>We provide Live sessions by the industry experts where you get to know about the<br/> various paradigms of problem solving and their applications in the real world.<br/> We provide one to one sessions for all types of doubt clarifications.</small></p>\r\n        </div>\r\n        </div>\r\n        <div>\r\n     <h2 id=\"cour\">Course</h2>\r\n     <div class=\"sub\">\r\n     <a href=\"#\" class=\"action-button shadow animate blue\">C++</a><br/>\r\n  <a href=\"#\" class=\"action-button shadow animate red\">Java</a><br/>\r\n  <a href=\"#\" class=\"action-button shadow animate green\">Python</a><br/>\r\n  <a href=\"#\" class=\"action-button shadow animate yellow\">MERN Stack</a><br/>\r\n  <a href=\"#\" class=\"action-button shadow animate red\">DSA</a>\r\n     </div>\r\n     </div>\r\n     <div id=\"last\">\r\n    <h2>Work with us</h2>\r\n     <a href=\"#\">Instructor</a><br/>\r\n     <a href=\"#\">Content Development</a><br/>\r\n     <a href=\"#\">Marketing</a>\r\n     \r\n     </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer","import React from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport './Contact.css';\r\nimport skyimage from \"./sky.jpeg\"\r\nclass Contact extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n\r\n    this.state = {fullname:\"suraj\", email:\"ss971600@gmail.com\", phone:\"7836836353\", message:\"plz write here\"}\r\n}\r\n/* handlename =(event)=>\r\n   this.setState({fullname:event.target.value})\r\n\r\n   handleemail =(event)=>\r\n   this.setState({email:event.target.value})\r\n\r\n   handlephone =(event)=>\r\n   this.setState({phone: event.target.value})\r\n\r\n   handlemessage =(event)=>\r\n   this.setState({message:event.target.value})*/\r\n\r\n   handlechangeall=(event) =>{\r\n\r\n     this.setState( {[event.target.name]: event.target.value} )\r\n   }\r\n\r\n   handlesubmit =(event)=>{\r\n\r\n  /*  alert(`my name is ${this.state.fullname}. \r\n    My email id is ${this.state.email}\r\n    My mobile number is ${this.state.phone}\r\n    my message to ur company is ${this.state.message}`\r\n    ); */\r\n\r\n    alert(JSON.stringify(this.state))\r\n    event.preventDefault();\r\n   }\r\n\r\n    render(){\r\n     \r\n        return(\r\n        \r\n         <div>\r\n         \r\n        <div class=\"frm\">\r\n        <div id=\"txt\" ><h1>Hello i am here</h1></div>\r\n       <form onSubmit={this.handlesubmit}>\r\n      \r\n       <label>Fullname</label><br/>\r\n    <input type=\"text\" name=\"fullname\" value={this.state.fullname} onChange={this.handlechangeall} /><br/>\r\n\r\n    <label>Email</label><br/>\r\n    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handlechangeall} /><br/>\r\n\r\n    <label>Mobile</label><br/>\r\n    <input type=\"number\" name=\"phone\" value={this.state.phone} onChange={this.handlechangeall} /><br/>\r\n\r\n    <label>Message</label><br/>\r\n    <textarea value={this.state.message} name=\"message\" onChange={this.handlechangeall} /><br/>\r\n\r\n    <input type=\"submit\" value=\"send\" />\r\n       </form>\r\n       </div>\r\n        </div>\r\n        )\r\n}\r\n}\r\nexport default Contact","import React from \"react\";\r\nimport Contact from './contact.js';\r\nimport { render } from \"@testing-library/react\";\r\nclass Form extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n   \r\n    render(){\r\n     \r\n        return(<div className=\"contactstyle\">\r\n       <h1>Welcome</h1>\r\n       <Contact/>\r\n      \r\n\r\n    </div>)\r\n}\r\n}\r\nexport default Form","import React from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from 'styled-components';\r\nimport amazonimage from \"./amazon.png\"\r\nconst CardBodyWrapper = styled(\"Card.Body\")`\r\n\r\n background-color:rgb(240,240,240)\r\n ;\r\n width:350px;\r\n height:450px;\r\n margin:50px;\r\n display-flex:row;\r\n \r\n`;\r\nconst CardImgWrapper = styled(\"img\")`\r\n\r\nheight:100px;\r\nwidth:180px;\r\n`;\r\nconst UppercaseName = styled(\"h4\")`\r\n\r\nfont-weight:bold;\r\nfont-family: 'Raleway', sans-serif;\r\n\r\nword-spacing: 10px;\r\n\r\n`;\r\nconst ButtonWrapper = styled(\"Button\")`\r\n\r\nheight:45px;\r\nwidth:170px;\r\nbackground-color: #FF4500;\r\ncolor:white;\r\nborder:none;\r\nfont-weight:bold;\r\nfont-family: 'Raleway', sans-serif;\r\n\r\n&:hover{\r\n  background-color: white;\r\n  color:black;\r\n}\r\n\r\n`;\r\nconst StrikeWrapper = styled(\"Strike\")`\r\n font-size:25px\r\n\r\n`;\r\nconst H3Wrapper = styled(\"h3\")`\r\n\r\nfont-size:40px;\r\nfont-weight: normal;\r\n`\r\nclass Cord extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{ width: '18rem' }}>\r\n         \r\n          <CardBodyWrapper>\r\n          <CardImgWrapper src={amazonimage} height=\"40px\" width=\"60px\"></CardImgWrapper>\r\n        <  UppercaseName>MASTER DS AND ALGO<br/> WITH C++</UppercaseName>\r\n          <StrikeWrapper>₹15,999</StrikeWrapper>\r\n           <H3Wrapper>₹12,499</H3Wrapper>\r\n            <br/>\r\n            <br/>\r\n            <ButtonWrapper variant=\"primary\">View Description</ButtonWrapper><br/><br/>\r\n            <ButtonWrapper variant=\"primary\">Take Demo Class</ButtonWrapper>\r\n          </CardBodyWrapper>\r\n        </Card>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\nexport default Cord","import React from \"react\";\r\nclass Car extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {name : \"hiiiiii\",\r\n     roll : \"915\"\r\n    };\r\n    }\r\n    changename=()=>{this.setState({name:\"vikash\"})}\r\n    render(){\r\n\r\n        return(\r\n        <div>\r\n        <h2>{this.state.name}</h2>\r\n        <h2>{this.props.model}</h2>\r\n        <h2>{this.state.roll}</h2>\r\n        <button type=\"button\" onClick={this.changename}>button</button>\r\n        </div>\r\n      )}\r\n}\r\nexport default Car","import React from \"react\";\r\n\r\nclass MyForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { username: '' };\r\n    } \r\n    mySubmitHandler = (event) => {\r\n      event.preventDefault();\r\n      alert(\"You are submitting \" + this.state.username);\r\n    }\r\n    myChangeHandler = (event) => {\r\n      this.setState({username: event.target.value});\r\n      console.log(this.state.username)\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.mySubmitHandler}>\r\n        <h1>Hello {this.state.username}</h1>\r\n        \r\n        <p>Enter your name, and submit:</p>\r\n        <input\r\n        type='text'\r\n        onChange={this.myChangeHandler}\r\n      />\r\n        <input type='submit'/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default MyForm","import React from 'react';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport Form from './form.js';\nimport Contact from './contact.js';\nimport './App.css';\nimport Cord from './card.js';\nimport Car from './class';\nimport Myform from \"./newform\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      \n        \n      <Cord/>\n      \n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}